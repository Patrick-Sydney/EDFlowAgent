Short answer: **yes**—saving **+Obs** should always write a clinical record to the Patient Journey. It’s part of the patient’s audit trail and drives monitoring/alerts and lane logic. The trick is to keep it **useful, not noisy**.

---

# What to record (every +Obs save)

Create **one Journey event** for the observation set, and a **second event only if EWS changes**.

**Event 1 — `vitals` (always)**

```ts
{
  kind: "vitals",
  patientId,
  t: isoNow(),
  label: "Obs",
  detail: {
    rr, hr, sbp, spo2, temp,  // whatever was entered
    ews,                      // computed at save time
    o2_lpm?, device?, posture?, pain?, gcs?,
    complete: hasAllCoreVitals,   // boolean
    source: "obs",                 // manual | device
    actor: currentRole            // RN | HCA | MD
  }
}
```

**Event 2 — `ews_change` (only if Δ ≠ 0)**

```ts
{
  kind: "ews_change",
  patientId,
  t: isoNow(),
  label: `EWS ${prevEws} → ${ews}`,
  severity: ews >= 5 ? "warn" : undefined,
  detail: { prev: prevEws, next: ews, delta: ews - prevEws }
}
```

> This mirrors our Phase-2 baseline (EWS recalculated on save; log `vitals` + `ews_change` if score shifts).

---

# How it shows in the Journey (calm, readable)

* In **Clinical** mode, render an **“Obs” row** with a compact summary:
  `Obs  RR 24  · HR 112  · SBP 93  · SpO₂ 92%  · Temp 38.4  (EWS 6 ↑)`
  Tap to expand full set.
* If multiple obs occur within a short window (e.g., 30 min) and **EWS unchanged**, **auto-group** into a single line: `Obs ×3 (tap to expand)`.
* Plot a **tick** on the Vitals timeline at the same time; keep dashed band for EWS≥5.

---

# What it drives (why it matters)

1. **Monitoring engine**

   * Resolve “Obs due” task; schedule the next per plan (EWS/ATS rules).
2. **Light alerts**

   * If overdue resolved → clear badge.
   * If `ews_change` uptrend or threshold crossed → badge on card + Journey `alert`.
3. **Lane logic**

   * +Obs itself doesn’t move lanes, but it can trigger **intensity changes**; diagnostic lanes still key off orders/results.
4. **MD/RN handover**

   * A quick scroll of “Obs + EWS deltas” gives the clinical arc at a glance.

---

# Noise management (important)

* **Group** obs in the Journey if **EWS unchanged** and **<30 min** apart; show “×N”.
* **Hide** device micro-samples by default; label those as `source: "device"` and aggregate hourly unless promoted by a rule (e.g., sustained desat).
* Mark **incomplete sets** (`complete:false`) with a tiny dot and tooltip (“partial obs”).

---

# UI acceptance (what “good” looks like)

* Saving +Obs updates chips and **adds an “Obs … (EWS n)” row in <1 s**.
* If EWS changed, a **second row** appears: `EWS 4 → 6` (amber dot if ≥5).
* “Obs due” **task clears** and **next due** appears.
* Timeline shows a tick at the same time.

---

# Drop-in wiring (where to put it)

In `components/obs/ObsQuickForm.tsx` (on Save):

```ts
const prev = getLastEws(patientId);
const ews = computeEws({ rr, hr, sbp, spo2, temp });

useVitalsStore.getState().append(patientId, { t: now, rr, hr, sbp, spo2, temp, ews, source:"obs" });

useJourneyStore.getState().append({
  id: crypto.randomUUID(),
  patientId, t: now,
  kind: "vitals",
  label: "Obs",
  detail: { rr, hr, sbp, spo2, temp, ews, source:"obs", actor: role, complete: hasAllCoreVitals }
});

if (prev !== ews) {
  useJourneyStore.getState().append({
    id: crypto.randomUUID(),
    patientId, t: now,
    kind: "ews_change",
    label: `EWS ${prev ?? "—"} → ${ews}`,
    severity: ews >= 5 ? "warn" : undefined,
    detail: { prev, next: ews, delta: (prev == null ? null : ews - prev) }
  });
}

// Tasks & scheduling
resolveObsDueTask(patientId);
scheduleNextObs(patientId, ews, ats); // your rules engine
```

---

# FHIR mapping (for later integration)

* `vitals` → `Observation` resources (plus a derived Observation for EWS).
* `ews_change` → derived Observation + `DetectedIssue`/`Flag` or `Task` if it prompts action.

---

## Bottom line

**Yes.** Every +Obs should create a Journey record (and EWS delta when applicable). It’s clinically correct, auditable, and it powers monitoring/alerts—while grouping and calm rendering keep the feed readable.
